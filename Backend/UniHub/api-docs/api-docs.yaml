openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/users/profilePic/image:
    put:
      tags:
      - rest-user-controller
      summary: Change the current profile picture
      operationId: changePic
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "404":
          description: User not found
        "401":
          description: Unauthorized
        "200":
          description: Changed the profile picture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "403":
          description: Forbidden
  /api/users/addPack/{id}:
    put:
      tags:
      - rest-user-controller
      summary: Add a pack to a user
      operationId: addPack
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Added the pack to the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "404":
          description: User not found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/posts/{formId}/{id}:
    put:
      tags:
      - rest-post-controller
      summary: Update a post for a form
      operationId: updatePost
      parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "404":
          description: Form or post not found
        "400":
          description: Bad request
        "200":
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    delete:
      tags:
      - rest-post-controller
      summary: Delete a post for a form
      operationId: deletePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: formId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Post deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "404":
          description: Form or post not found
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/packs/{id}:
    get:
      tags:
      - rest-pack-controller
      summary: Get a pack by id
      operationId: getPack
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "200":
          description: Found the pack
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pack'
        "404":
          description: Pack not found
        "403":
          description: Forbidden
    put:
      tags:
      - rest-pack-controller
      summary: Update a pack
      operationId: updatePack
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pack'
        required: true
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "404":
          description: Pack not found
        "403":
          description: Forbidden
        "200":
          description: Pack updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pack'
    delete:
      tags:
      - rest-pack-controller
      summary: Delete a pack
      operationId: deletePack
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "404":
          description: Pack not found
        "403":
          description: Forbidden
        "200":
          description: Pack deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pack'
  /api/forms/{id}:
    get:
      tags:
      - rest-forms-controller
      summary: Get a form by id
      operationId: getForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Form not found
        "400":
          description: Bad request
        "200":
          description: Found the form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forms'
        "500":
          description: Internal server error
    put:
      tags:
      - rest-forms-controller
      summary: Update an existing form by id
      operationId: updateForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forms'
        required: true
      responses:
        "404":
          description: Form not found
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "200":
          description: Form updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forms'
    delete:
      tags:
      - rest-forms-controller
      summary: Delete a form by id
      operationId: deleteForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Form not found
        "500":
          description: Internal server error
        "200":
          description: Form deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forms'
  /api/users/new:
    post:
      tags:
      - rest-user-controller
      summary: Create a new user
      operationId: processRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "201":
          description: Created the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "403":
          description: Forbidden
  /api/posts/{id}:
    post:
      tags:
      - rest-post-controller
      summary: Create a new post for a form
      operationId: createPost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "404":
          description: Form not found
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "201":
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "403":
          description: Forbidden
  /api/packs/:
    get:
      tags:
      - rest-pack-controller
      summary: Get all packs
      operationId: getPacks
      responses:
        "200":
          description: Found the packs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pack'
        "400":
          description: Bad request
        "404":
          description: Packs not found
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      tags:
      - rest-pack-controller
      summary: Create a pack
      operationId: createPack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pack'
        required: true
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "404":
          description: Pack not found
        "201":
          description: Pack created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pack'
        "403":
          description: Forbidden
  /api/forms/:
    get:
      tags:
      - rest-forms-controller
      operationId: getForms
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Forms'
    post:
      tags:
      - rest-forms-controller
      summary: Create a new form
      operationId: createForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forms'
        required: true
      responses:
        "400":
          description: Bad request
        "201":
          description: Form created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forms'
        "500":
          description: Internal server error
  /api/auth/refresh:
    post:
      tags:
      - rest-login-controller
      summary: Refresh Token
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "200":
          description: Token refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - rest-login-controller
      summary: Login
      operationId: processForm
      parameters:
      - name: AuthToken
        in: cookie
        required: false
        schema:
          type: string
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/users/me:
    get:
      tags:
      - rest-user-controller
      summary: Get the current user
      operationId: getProfile
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "404":
          description: User not found
        "200":
          description: Found the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/users/all:
    get:
      tags:
      - rest-user-controller
      summary: Get all users
      operationId: getProfiles
      responses:
        "404":
          description: Users not found
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "200":
          description: Found the users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "403":
          description: Forbidden
  /api/search/{keyword}:
    get:
      tags:
      - rest-search-controller
      summary: Search for a pack
      operationId: search
      parameters:
      - name: keyword
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad request
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "200":
          description: Found the pack
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pack'
        "404":
          description: Pack not found
        "403":
          description: Forbidden
  /api/posts/:
    get:
      tags:
      - rest-post-controller
      summary: Get all the posts
      operationId: getPosts
      responses:
        "200":
          description: Found the posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "400":
          description: Bad request
        "404":
          description: Posts not found
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/auth/logout:
    get:
      tags:
      - rest-login-controller
      summary: Logout
      operationId: LogOut
      responses:
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "403":
          description: Forbidden
components:
  schemas:
    Forms:
      type: object
      properties:
        id:
          type: integer
          format: int64
        threadTitle:
          type: string
        threadContent_short:
          type: string
        threadContent:
          type: string
        threadDate:
          type: string
        threadAuthor:
          type: string
        threadUpvotes:
          type: integer
          format: int32
        threadImage:
          type: string
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    Pack:
      type: object
      properties:
        id:
          type: integer
          format: int64
        packTitle:
          type: string
        packTitle_expanded:
          type: string
        packDescription_short:
          type: string
        getpackDescriptionLong:
          type: string
        packPrice:
          type: number
          format: float
        packImage:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        postContent:
          type: string
        postDate:
          type: string
        postAuthor:
          type: string
        postUpvotes:
          type: integer
          format: int32
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
        formsList:
          type: array
          items:
            $ref: '#/components/schemas/Forms'
        packList:
          type: array
          items:
            $ref: '#/components/schemas/Pack'
        roles:
          type: array
          items:
            type: string
        image:
          type: array
          items:
            type: string
            format: byte
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
